
/*
'===============================================================================
'  Generated From - CSharp_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  ** 
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'abstract' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  public class YourObject :  _YourObject
'  {
'
'  }
'
'===============================================================================
*/

// Generated by MyGeneration Version # (1.1.7.1)

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections;
using System.Collections.Specialized;

using MyGeneration.dOOdads;

namespace LC.Model.BMS.DAL
{
	public abstract class _tblDepartments : SqlClientEntity
	{
		public _tblDepartments()
		{
			this.QuerySource = "tblDepartments";
			this.MappingName = "tblDepartments";

		}	

		//=================================================================
		//  public Overrides void AddNew()
		//=================================================================
		//
		//=================================================================
		public override void AddNew()
		{
			base.AddNew();
			
		}
		
		
		public override void FlushData()
		{
			this._whereClause = null;
			this._aggregateClause = null;
			base.FlushData();
		}
		
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public bool LoadAll() 
		{
			ListDictionary parameters = null;
			
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_tblDepartmentsLoadAll]", parameters);
		}
	
		//=================================================================
		// public Overridable Function LoadByPrimaryKey()  As Boolean
		//=================================================================
		//  Loads a single row of via the primary key
		//=================================================================
		public virtual bool LoadByPrimaryKey(int PkDepartmentID)
		{
			ListDictionary parameters = new ListDictionary();
			parameters.Add(Parameters.PkDepartmentID, PkDepartmentID);

		
			return base.LoadFromSql("[" + this.SchemaStoredProcedure + "proc_tblDepartmentsLoadByPrimaryKey]", parameters);
		}
		
		#region Parameters
		protected class Parameters
		{
			
			public static SqlParameter PkDepartmentID
			{
				get
				{
					return new SqlParameter("@PkDepartmentID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter SDepartmentName
			{
				get
				{
					return new SqlParameter("@SDepartmentName", SqlDbType.NVarChar, 100);
				}
			}
			
			public static SqlParameter SPhone
			{
				get
				{
					return new SqlParameter("@SPhone", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter SAddress
			{
				get
				{
					return new SqlParameter("@SAddress", SqlDbType.NVarChar, 100);
				}
			}
			
			public static SqlParameter FkManagerUserID
			{
				get
				{
					return new SqlParameter("@FkManagerUserID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter FkAccountManagerUserID
			{
				get
				{
					return new SqlParameter("@FkAccountManagerUserID", SqlDbType.Int, 0);
				}
			}
			
			public static SqlParameter WeekStartTime
			{
				get
				{
					return new SqlParameter("@WeekStartTime", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter WeekEndTime
			{
				get
				{
					return new SqlParameter("@WeekEndTime", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter WeekendStartTime
			{
				get
				{
					return new SqlParameter("@WeekendStartTime", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter WeekendEndTime
			{
				get
				{
					return new SqlParameter("@WeekendEndTime", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter LowSeason1
			{
				get
				{
					return new SqlParameter("@LowSeason1", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter LowSeason2
			{
				get
				{
					return new SqlParameter("@LowSeason2", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter HighSeason
			{
				get
				{
					return new SqlParameter("@HighSeason", SqlDbType.NVarChar, 50);
				}
			}
			
			public static SqlParameter HighSeasonDef
			{
				get
				{
					return new SqlParameter("@HighSeasonDef", SqlDbType.NText, 1073741823);
				}
			}
			
			public static SqlParameter LowSeasonDef
			{
				get
				{
					return new SqlParameter("@LowSeasonDef", SqlDbType.NText, 1073741823);
				}
			}
			
			public static SqlParameter Contract
			{
				get
				{
					return new SqlParameter("@Contract", SqlDbType.NText, 1073741823);
				}
			}
			
			public static SqlParameter BIsActive
			{
				get
				{
					return new SqlParameter("@BIsActive", SqlDbType.Bit, 0);
				}
			}
			
			public static SqlParameter DCreateDate
			{
				get
				{
					return new SqlParameter("@DCreateDate", SqlDbType.DateTime, 0);
				}
			}
			
			public static SqlParameter DModifiedDate
			{
				get
				{
					return new SqlParameter("@DModifiedDate", SqlDbType.DateTime, 0);
				}
			}
			
		}
		#endregion		
	
		#region ColumnNames
		public class ColumnNames
		{  
            public const string PkDepartmentID = "pkDepartmentID";
            public const string SDepartmentName = "sDepartmentName";
            public const string SPhone = "sPhone";
            public const string SAddress = "sAddress";
            public const string FkManagerUserID = "fkManagerUserID";
            public const string FkAccountManagerUserID = "fkAccountManagerUserID";
            public const string WeekStartTime = "weekStartTime";
            public const string WeekEndTime = "weekEndTime";
            public const string WeekendStartTime = "weekendStartTime";
            public const string WeekendEndTime = "weekendEndTime";
            public const string LowSeason1 = "lowSeason1";
            public const string LowSeason2 = "lowSeason2";
            public const string HighSeason = "HighSeason";
            public const string HighSeasonDef = "HighSeasonDef";
            public const string LowSeasonDef = "LowSeasonDef";
            public const string Contract = "Contract";
            public const string BIsActive = "bIsActive";
            public const string DCreateDate = "dCreateDate";
            public const string DModifiedDate = "dModifiedDate";

			static public string ToPropertyName(string columnName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[PkDepartmentID] = _tblDepartments.PropertyNames.PkDepartmentID;
					ht[SDepartmentName] = _tblDepartments.PropertyNames.SDepartmentName;
					ht[SPhone] = _tblDepartments.PropertyNames.SPhone;
					ht[SAddress] = _tblDepartments.PropertyNames.SAddress;
					ht[FkManagerUserID] = _tblDepartments.PropertyNames.FkManagerUserID;
					ht[FkAccountManagerUserID] = _tblDepartments.PropertyNames.FkAccountManagerUserID;
					ht[WeekStartTime] = _tblDepartments.PropertyNames.WeekStartTime;
					ht[WeekEndTime] = _tblDepartments.PropertyNames.WeekEndTime;
					ht[WeekendStartTime] = _tblDepartments.PropertyNames.WeekendStartTime;
					ht[WeekendEndTime] = _tblDepartments.PropertyNames.WeekendEndTime;
					ht[LowSeason1] = _tblDepartments.PropertyNames.LowSeason1;
					ht[LowSeason2] = _tblDepartments.PropertyNames.LowSeason2;
					ht[HighSeason] = _tblDepartments.PropertyNames.HighSeason;
					ht[HighSeasonDef] = _tblDepartments.PropertyNames.HighSeasonDef;
					ht[LowSeasonDef] = _tblDepartments.PropertyNames.LowSeasonDef;
					ht[Contract] = _tblDepartments.PropertyNames.Contract;
					ht[BIsActive] = _tblDepartments.PropertyNames.BIsActive;
					ht[DCreateDate] = _tblDepartments.PropertyNames.DCreateDate;
					ht[DModifiedDate] = _tblDepartments.PropertyNames.DModifiedDate;

				}
				return (string)ht[columnName];
			}

			static private Hashtable ht = null;			 
		}
		#endregion
		
		#region PropertyNames
		public class PropertyNames
		{  
            public const string PkDepartmentID = "PkDepartmentID";
            public const string SDepartmentName = "SDepartmentName";
            public const string SPhone = "SPhone";
            public const string SAddress = "SAddress";
            public const string FkManagerUserID = "FkManagerUserID";
            public const string FkAccountManagerUserID = "FkAccountManagerUserID";
            public const string WeekStartTime = "WeekStartTime";
            public const string WeekEndTime = "WeekEndTime";
            public const string WeekendStartTime = "WeekendStartTime";
            public const string WeekendEndTime = "WeekendEndTime";
            public const string LowSeason1 = "LowSeason1";
            public const string LowSeason2 = "LowSeason2";
            public const string HighSeason = "HighSeason";
            public const string HighSeasonDef = "HighSeasonDef";
            public const string LowSeasonDef = "LowSeasonDef";
            public const string Contract = "Contract";
            public const string BIsActive = "BIsActive";
            public const string DCreateDate = "DCreateDate";
            public const string DModifiedDate = "DModifiedDate";

			static public string ToColumnName(string propertyName)
			{
				if(ht == null)
				{
					ht = new Hashtable();
					
					ht[PkDepartmentID] = _tblDepartments.ColumnNames.PkDepartmentID;
					ht[SDepartmentName] = _tblDepartments.ColumnNames.SDepartmentName;
					ht[SPhone] = _tblDepartments.ColumnNames.SPhone;
					ht[SAddress] = _tblDepartments.ColumnNames.SAddress;
					ht[FkManagerUserID] = _tblDepartments.ColumnNames.FkManagerUserID;
					ht[FkAccountManagerUserID] = _tblDepartments.ColumnNames.FkAccountManagerUserID;
					ht[WeekStartTime] = _tblDepartments.ColumnNames.WeekStartTime;
					ht[WeekEndTime] = _tblDepartments.ColumnNames.WeekEndTime;
					ht[WeekendStartTime] = _tblDepartments.ColumnNames.WeekendStartTime;
					ht[WeekendEndTime] = _tblDepartments.ColumnNames.WeekendEndTime;
					ht[LowSeason1] = _tblDepartments.ColumnNames.LowSeason1;
					ht[LowSeason2] = _tblDepartments.ColumnNames.LowSeason2;
					ht[HighSeason] = _tblDepartments.ColumnNames.HighSeason;
					ht[HighSeasonDef] = _tblDepartments.ColumnNames.HighSeasonDef;
					ht[LowSeasonDef] = _tblDepartments.ColumnNames.LowSeasonDef;
					ht[Contract] = _tblDepartments.ColumnNames.Contract;
					ht[BIsActive] = _tblDepartments.ColumnNames.BIsActive;
					ht[DCreateDate] = _tblDepartments.ColumnNames.DCreateDate;
					ht[DModifiedDate] = _tblDepartments.ColumnNames.DModifiedDate;

				}
				return (string)ht[propertyName];
			}

			static private Hashtable ht = null;			 
		}			 
		#endregion	

		#region StringPropertyNames
		public class StringPropertyNames
		{  
            public const string PkDepartmentID = "s_PkDepartmentID";
            public const string SDepartmentName = "s_SDepartmentName";
            public const string SPhone = "s_SPhone";
            public const string SAddress = "s_SAddress";
            public const string FkManagerUserID = "s_FkManagerUserID";
            public const string FkAccountManagerUserID = "s_FkAccountManagerUserID";
            public const string WeekStartTime = "s_WeekStartTime";
            public const string WeekEndTime = "s_WeekEndTime";
            public const string WeekendStartTime = "s_WeekendStartTime";
            public const string WeekendEndTime = "s_WeekendEndTime";
            public const string LowSeason1 = "s_LowSeason1";
            public const string LowSeason2 = "s_LowSeason2";
            public const string HighSeason = "s_HighSeason";
            public const string HighSeasonDef = "s_HighSeasonDef";
            public const string LowSeasonDef = "s_LowSeasonDef";
            public const string Contract = "s_Contract";
            public const string BIsActive = "s_BIsActive";
            public const string DCreateDate = "s_DCreateDate";
            public const string DModifiedDate = "s_DModifiedDate";

		}
		#endregion		
		
		#region Properties
	
		public virtual int PkDepartmentID
	    {
			get
	        {
				return base.Getint(ColumnNames.PkDepartmentID);
			}
			set
	        {
				base.Setint(ColumnNames.PkDepartmentID, value);
			}
		}

		public virtual string SDepartmentName
	    {
			get
	        {
				return base.Getstring(ColumnNames.SDepartmentName);
			}
			set
	        {
				base.Setstring(ColumnNames.SDepartmentName, value);
			}
		}

		public virtual string SPhone
	    {
			get
	        {
				return base.Getstring(ColumnNames.SPhone);
			}
			set
	        {
				base.Setstring(ColumnNames.SPhone, value);
			}
		}

		public virtual string SAddress
	    {
			get
	        {
				return base.Getstring(ColumnNames.SAddress);
			}
			set
	        {
				base.Setstring(ColumnNames.SAddress, value);
			}
		}

		public virtual int FkManagerUserID
	    {
			get
	        {
				return base.Getint(ColumnNames.FkManagerUserID);
			}
			set
	        {
				base.Setint(ColumnNames.FkManagerUserID, value);
			}
		}

		public virtual int FkAccountManagerUserID
	    {
			get
	        {
				return base.Getint(ColumnNames.FkAccountManagerUserID);
			}
			set
	        {
				base.Setint(ColumnNames.FkAccountManagerUserID, value);
			}
		}

		public virtual string WeekStartTime
	    {
			get
	        {
				return base.Getstring(ColumnNames.WeekStartTime);
			}
			set
	        {
				base.Setstring(ColumnNames.WeekStartTime, value);
			}
		}

		public virtual string WeekEndTime
	    {
			get
	        {
				return base.Getstring(ColumnNames.WeekEndTime);
			}
			set
	        {
				base.Setstring(ColumnNames.WeekEndTime, value);
			}
		}

		public virtual string WeekendStartTime
	    {
			get
	        {
				return base.Getstring(ColumnNames.WeekendStartTime);
			}
			set
	        {
				base.Setstring(ColumnNames.WeekendStartTime, value);
			}
		}

		public virtual string WeekendEndTime
	    {
			get
	        {
				return base.Getstring(ColumnNames.WeekendEndTime);
			}
			set
	        {
				base.Setstring(ColumnNames.WeekendEndTime, value);
			}
		}

		public virtual string LowSeason1
	    {
			get
	        {
				return base.Getstring(ColumnNames.LowSeason1);
			}
			set
	        {
				base.Setstring(ColumnNames.LowSeason1, value);
			}
		}

		public virtual string LowSeason2
	    {
			get
	        {
				return base.Getstring(ColumnNames.LowSeason2);
			}
			set
	        {
				base.Setstring(ColumnNames.LowSeason2, value);
			}
		}

		public virtual string HighSeason
	    {
			get
	        {
				return base.Getstring(ColumnNames.HighSeason);
			}
			set
	        {
				base.Setstring(ColumnNames.HighSeason, value);
			}
		}

		public virtual string HighSeasonDef
	    {
			get
	        {
				return base.Getstring(ColumnNames.HighSeasonDef);
			}
			set
	        {
				base.Setstring(ColumnNames.HighSeasonDef, value);
			}
		}

		public virtual string LowSeasonDef
	    {
			get
	        {
				return base.Getstring(ColumnNames.LowSeasonDef);
			}
			set
	        {
				base.Setstring(ColumnNames.LowSeasonDef, value);
			}
		}

		public virtual string Contract
	    {
			get
	        {
				return base.Getstring(ColumnNames.Contract);
			}
			set
	        {
				base.Setstring(ColumnNames.Contract, value);
			}
		}

		public virtual bool BIsActive
	    {
			get
	        {
				return base.Getbool(ColumnNames.BIsActive);
			}
			set
	        {
				base.Setbool(ColumnNames.BIsActive, value);
			}
		}

		public virtual DateTime DCreateDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.DCreateDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.DCreateDate, value);
			}
		}

		public virtual DateTime DModifiedDate
	    {
			get
	        {
				return base.GetDateTime(ColumnNames.DModifiedDate);
			}
			set
	        {
				base.SetDateTime(ColumnNames.DModifiedDate, value);
			}
		}


		#endregion
		
		#region String Properties
	
		public virtual string s_PkDepartmentID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.PkDepartmentID) ? string.Empty : base.GetintAsString(ColumnNames.PkDepartmentID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.PkDepartmentID);
				else
					this.PkDepartmentID = base.SetintAsString(ColumnNames.PkDepartmentID, value);
			}
		}

		public virtual string s_SDepartmentName
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.SDepartmentName) ? string.Empty : base.GetstringAsString(ColumnNames.SDepartmentName);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.SDepartmentName);
				else
					this.SDepartmentName = base.SetstringAsString(ColumnNames.SDepartmentName, value);
			}
		}

		public virtual string s_SPhone
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.SPhone) ? string.Empty : base.GetstringAsString(ColumnNames.SPhone);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.SPhone);
				else
					this.SPhone = base.SetstringAsString(ColumnNames.SPhone, value);
			}
		}

		public virtual string s_SAddress
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.SAddress) ? string.Empty : base.GetstringAsString(ColumnNames.SAddress);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.SAddress);
				else
					this.SAddress = base.SetstringAsString(ColumnNames.SAddress, value);
			}
		}

		public virtual string s_FkManagerUserID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.FkManagerUserID) ? string.Empty : base.GetintAsString(ColumnNames.FkManagerUserID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.FkManagerUserID);
				else
					this.FkManagerUserID = base.SetintAsString(ColumnNames.FkManagerUserID, value);
			}
		}

		public virtual string s_FkAccountManagerUserID
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.FkAccountManagerUserID) ? string.Empty : base.GetintAsString(ColumnNames.FkAccountManagerUserID);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.FkAccountManagerUserID);
				else
					this.FkAccountManagerUserID = base.SetintAsString(ColumnNames.FkAccountManagerUserID, value);
			}
		}

		public virtual string s_WeekStartTime
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.WeekStartTime) ? string.Empty : base.GetstringAsString(ColumnNames.WeekStartTime);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.WeekStartTime);
				else
					this.WeekStartTime = base.SetstringAsString(ColumnNames.WeekStartTime, value);
			}
		}

		public virtual string s_WeekEndTime
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.WeekEndTime) ? string.Empty : base.GetstringAsString(ColumnNames.WeekEndTime);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.WeekEndTime);
				else
					this.WeekEndTime = base.SetstringAsString(ColumnNames.WeekEndTime, value);
			}
		}

		public virtual string s_WeekendStartTime
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.WeekendStartTime) ? string.Empty : base.GetstringAsString(ColumnNames.WeekendStartTime);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.WeekendStartTime);
				else
					this.WeekendStartTime = base.SetstringAsString(ColumnNames.WeekendStartTime, value);
			}
		}

		public virtual string s_WeekendEndTime
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.WeekendEndTime) ? string.Empty : base.GetstringAsString(ColumnNames.WeekendEndTime);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.WeekendEndTime);
				else
					this.WeekendEndTime = base.SetstringAsString(ColumnNames.WeekendEndTime, value);
			}
		}

		public virtual string s_LowSeason1
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.LowSeason1) ? string.Empty : base.GetstringAsString(ColumnNames.LowSeason1);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.LowSeason1);
				else
					this.LowSeason1 = base.SetstringAsString(ColumnNames.LowSeason1, value);
			}
		}

		public virtual string s_LowSeason2
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.LowSeason2) ? string.Empty : base.GetstringAsString(ColumnNames.LowSeason2);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.LowSeason2);
				else
					this.LowSeason2 = base.SetstringAsString(ColumnNames.LowSeason2, value);
			}
		}

		public virtual string s_HighSeason
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.HighSeason) ? string.Empty : base.GetstringAsString(ColumnNames.HighSeason);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.HighSeason);
				else
					this.HighSeason = base.SetstringAsString(ColumnNames.HighSeason, value);
			}
		}

		public virtual string s_HighSeasonDef
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.HighSeasonDef) ? string.Empty : base.GetstringAsString(ColumnNames.HighSeasonDef);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.HighSeasonDef);
				else
					this.HighSeasonDef = base.SetstringAsString(ColumnNames.HighSeasonDef, value);
			}
		}

		public virtual string s_LowSeasonDef
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.LowSeasonDef) ? string.Empty : base.GetstringAsString(ColumnNames.LowSeasonDef);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.LowSeasonDef);
				else
					this.LowSeasonDef = base.SetstringAsString(ColumnNames.LowSeasonDef, value);
			}
		}

		public virtual string s_Contract
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.Contract) ? string.Empty : base.GetstringAsString(ColumnNames.Contract);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.Contract);
				else
					this.Contract = base.SetstringAsString(ColumnNames.Contract, value);
			}
		}

		public virtual string s_BIsActive
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.BIsActive) ? string.Empty : base.GetboolAsString(ColumnNames.BIsActive);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.BIsActive);
				else
					this.BIsActive = base.SetboolAsString(ColumnNames.BIsActive, value);
			}
		}

		public virtual string s_DCreateDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DCreateDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.DCreateDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DCreateDate);
				else
					this.DCreateDate = base.SetDateTimeAsString(ColumnNames.DCreateDate, value);
			}
		}

		public virtual string s_DModifiedDate
	    {
			get
	        {
				return this.IsColumnNull(ColumnNames.DModifiedDate) ? string.Empty : base.GetDateTimeAsString(ColumnNames.DModifiedDate);
			}
			set
	        {
				if(string.Empty == value)
					this.SetColumnNull(ColumnNames.DModifiedDate);
				else
					this.DModifiedDate = base.SetDateTimeAsString(ColumnNames.DModifiedDate, value);
			}
		}


		#endregion		
	
		#region Where Clause
		public class WhereClause
		{
			public WhereClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffWhereParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffWhereParameter(this);
					}

					return _tearOff;
				}
			}

			#region WhereParameter TearOff's
			public class TearOffWhereParameter
			{
				public TearOffWhereParameter(WhereClause clause)
				{
					this._clause = clause;
				}
				
				
				public WhereParameter PkDepartmentID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.PkDepartmentID, Parameters.PkDepartmentID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter SDepartmentName
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.SDepartmentName, Parameters.SDepartmentName);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter SPhone
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.SPhone, Parameters.SPhone);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter SAddress
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.SAddress, Parameters.SAddress);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter FkManagerUserID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.FkManagerUserID, Parameters.FkManagerUserID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter FkAccountManagerUserID
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.FkAccountManagerUserID, Parameters.FkAccountManagerUserID);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter WeekStartTime
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.WeekStartTime, Parameters.WeekStartTime);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter WeekEndTime
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.WeekEndTime, Parameters.WeekEndTime);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter WeekendStartTime
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.WeekendStartTime, Parameters.WeekendStartTime);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter WeekendEndTime
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.WeekendEndTime, Parameters.WeekendEndTime);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter LowSeason1
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.LowSeason1, Parameters.LowSeason1);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter LowSeason2
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.LowSeason2, Parameters.LowSeason2);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter HighSeason
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.HighSeason, Parameters.HighSeason);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter HighSeasonDef
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.HighSeasonDef, Parameters.HighSeasonDef);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter LowSeasonDef
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.LowSeasonDef, Parameters.LowSeasonDef);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter Contract
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.Contract, Parameters.Contract);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter BIsActive
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.BIsActive, Parameters.BIsActive);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DCreateDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DCreateDate, Parameters.DCreateDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}

				public WhereParameter DModifiedDate
				{
					get
					{
							WhereParameter where = new WhereParameter(ColumnNames.DModifiedDate, Parameters.DModifiedDate);
							this._clause._entity.Query.AddWhereParameter(where);
							return where;
					}
				}


				private WhereClause _clause;
			}
			#endregion
		
			public WhereParameter PkDepartmentID
		    {
				get
		        {
					if(_PkDepartmentID_W == null)
	        	    {
						_PkDepartmentID_W = TearOff.PkDepartmentID;
					}
					return _PkDepartmentID_W;
				}
			}

			public WhereParameter SDepartmentName
		    {
				get
		        {
					if(_SDepartmentName_W == null)
	        	    {
						_SDepartmentName_W = TearOff.SDepartmentName;
					}
					return _SDepartmentName_W;
				}
			}

			public WhereParameter SPhone
		    {
				get
		        {
					if(_SPhone_W == null)
	        	    {
						_SPhone_W = TearOff.SPhone;
					}
					return _SPhone_W;
				}
			}

			public WhereParameter SAddress
		    {
				get
		        {
					if(_SAddress_W == null)
	        	    {
						_SAddress_W = TearOff.SAddress;
					}
					return _SAddress_W;
				}
			}

			public WhereParameter FkManagerUserID
		    {
				get
		        {
					if(_FkManagerUserID_W == null)
	        	    {
						_FkManagerUserID_W = TearOff.FkManagerUserID;
					}
					return _FkManagerUserID_W;
				}
			}

			public WhereParameter FkAccountManagerUserID
		    {
				get
		        {
					if(_FkAccountManagerUserID_W == null)
	        	    {
						_FkAccountManagerUserID_W = TearOff.FkAccountManagerUserID;
					}
					return _FkAccountManagerUserID_W;
				}
			}

			public WhereParameter WeekStartTime
		    {
				get
		        {
					if(_WeekStartTime_W == null)
	        	    {
						_WeekStartTime_W = TearOff.WeekStartTime;
					}
					return _WeekStartTime_W;
				}
			}

			public WhereParameter WeekEndTime
		    {
				get
		        {
					if(_WeekEndTime_W == null)
	        	    {
						_WeekEndTime_W = TearOff.WeekEndTime;
					}
					return _WeekEndTime_W;
				}
			}

			public WhereParameter WeekendStartTime
		    {
				get
		        {
					if(_WeekendStartTime_W == null)
	        	    {
						_WeekendStartTime_W = TearOff.WeekendStartTime;
					}
					return _WeekendStartTime_W;
				}
			}

			public WhereParameter WeekendEndTime
		    {
				get
		        {
					if(_WeekendEndTime_W == null)
	        	    {
						_WeekendEndTime_W = TearOff.WeekendEndTime;
					}
					return _WeekendEndTime_W;
				}
			}

			public WhereParameter LowSeason1
		    {
				get
		        {
					if(_LowSeason1_W == null)
	        	    {
						_LowSeason1_W = TearOff.LowSeason1;
					}
					return _LowSeason1_W;
				}
			}

			public WhereParameter LowSeason2
		    {
				get
		        {
					if(_LowSeason2_W == null)
	        	    {
						_LowSeason2_W = TearOff.LowSeason2;
					}
					return _LowSeason2_W;
				}
			}

			public WhereParameter HighSeason
		    {
				get
		        {
					if(_HighSeason_W == null)
	        	    {
						_HighSeason_W = TearOff.HighSeason;
					}
					return _HighSeason_W;
				}
			}

			public WhereParameter HighSeasonDef
		    {
				get
		        {
					if(_HighSeasonDef_W == null)
	        	    {
						_HighSeasonDef_W = TearOff.HighSeasonDef;
					}
					return _HighSeasonDef_W;
				}
			}

			public WhereParameter LowSeasonDef
		    {
				get
		        {
					if(_LowSeasonDef_W == null)
	        	    {
						_LowSeasonDef_W = TearOff.LowSeasonDef;
					}
					return _LowSeasonDef_W;
				}
			}

			public WhereParameter Contract
		    {
				get
		        {
					if(_Contract_W == null)
	        	    {
						_Contract_W = TearOff.Contract;
					}
					return _Contract_W;
				}
			}

			public WhereParameter BIsActive
		    {
				get
		        {
					if(_BIsActive_W == null)
	        	    {
						_BIsActive_W = TearOff.BIsActive;
					}
					return _BIsActive_W;
				}
			}

			public WhereParameter DCreateDate
		    {
				get
		        {
					if(_DCreateDate_W == null)
	        	    {
						_DCreateDate_W = TearOff.DCreateDate;
					}
					return _DCreateDate_W;
				}
			}

			public WhereParameter DModifiedDate
		    {
				get
		        {
					if(_DModifiedDate_W == null)
	        	    {
						_DModifiedDate_W = TearOff.DModifiedDate;
					}
					return _DModifiedDate_W;
				}
			}

			private WhereParameter _PkDepartmentID_W = null;
			private WhereParameter _SDepartmentName_W = null;
			private WhereParameter _SPhone_W = null;
			private WhereParameter _SAddress_W = null;
			private WhereParameter _FkManagerUserID_W = null;
			private WhereParameter _FkAccountManagerUserID_W = null;
			private WhereParameter _WeekStartTime_W = null;
			private WhereParameter _WeekEndTime_W = null;
			private WhereParameter _WeekendStartTime_W = null;
			private WhereParameter _WeekendEndTime_W = null;
			private WhereParameter _LowSeason1_W = null;
			private WhereParameter _LowSeason2_W = null;
			private WhereParameter _HighSeason_W = null;
			private WhereParameter _HighSeasonDef_W = null;
			private WhereParameter _LowSeasonDef_W = null;
			private WhereParameter _Contract_W = null;
			private WhereParameter _BIsActive_W = null;
			private WhereParameter _DCreateDate_W = null;
			private WhereParameter _DModifiedDate_W = null;

			public void WhereClauseReset()
			{
				_PkDepartmentID_W = null;
				_SDepartmentName_W = null;
				_SPhone_W = null;
				_SAddress_W = null;
				_FkManagerUserID_W = null;
				_FkAccountManagerUserID_W = null;
				_WeekStartTime_W = null;
				_WeekEndTime_W = null;
				_WeekendStartTime_W = null;
				_WeekendEndTime_W = null;
				_LowSeason1_W = null;
				_LowSeason2_W = null;
				_HighSeason_W = null;
				_HighSeasonDef_W = null;
				_LowSeasonDef_W = null;
				_Contract_W = null;
				_BIsActive_W = null;
				_DCreateDate_W = null;
				_DModifiedDate_W = null;

				this._entity.Query.FlushWhereParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffWhereParameter _tearOff;
			
		}
	
		public WhereClause Where
		{
			get
			{
				if(_whereClause == null)
				{
					_whereClause = new WhereClause(this);
				}
		
				return _whereClause;
			}
		}
		
		private WhereClause _whereClause = null;	
		#endregion
	
		#region Aggregate Clause
		public class AggregateClause
		{
			public AggregateClause(BusinessEntity entity)
			{
				this._entity = entity;
			}
			
			public TearOffAggregateParameter TearOff
			{
				get
				{
					if(_tearOff == null)
					{
						_tearOff = new TearOffAggregateParameter(this);
					}

					return _tearOff;
				}
			}

			#region AggregateParameter TearOff's
			public class TearOffAggregateParameter
			{
				public TearOffAggregateParameter(AggregateClause clause)
				{
					this._clause = clause;
				}
				
				
				public AggregateParameter PkDepartmentID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.PkDepartmentID, Parameters.PkDepartmentID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter SDepartmentName
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.SDepartmentName, Parameters.SDepartmentName);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter SPhone
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.SPhone, Parameters.SPhone);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter SAddress
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.SAddress, Parameters.SAddress);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter FkManagerUserID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.FkManagerUserID, Parameters.FkManagerUserID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter FkAccountManagerUserID
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.FkAccountManagerUserID, Parameters.FkAccountManagerUserID);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter WeekStartTime
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.WeekStartTime, Parameters.WeekStartTime);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter WeekEndTime
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.WeekEndTime, Parameters.WeekEndTime);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter WeekendStartTime
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.WeekendStartTime, Parameters.WeekendStartTime);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter WeekendEndTime
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.WeekendEndTime, Parameters.WeekendEndTime);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter LowSeason1
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.LowSeason1, Parameters.LowSeason1);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter LowSeason2
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.LowSeason2, Parameters.LowSeason2);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter HighSeason
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.HighSeason, Parameters.HighSeason);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter HighSeasonDef
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.HighSeasonDef, Parameters.HighSeasonDef);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter LowSeasonDef
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.LowSeasonDef, Parameters.LowSeasonDef);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter Contract
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.Contract, Parameters.Contract);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter BIsActive
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.BIsActive, Parameters.BIsActive);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DCreateDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DCreateDate, Parameters.DCreateDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}

				public AggregateParameter DModifiedDate
				{
					get
					{
							AggregateParameter aggregate = new AggregateParameter(ColumnNames.DModifiedDate, Parameters.DModifiedDate);
							this._clause._entity.Query.AddAggregateParameter(aggregate);
							return aggregate;
					}
				}


				private AggregateClause _clause;
			}
			#endregion
		
			public AggregateParameter PkDepartmentID
		    {
				get
		        {
					if(_PkDepartmentID_W == null)
	        	    {
						_PkDepartmentID_W = TearOff.PkDepartmentID;
					}
					return _PkDepartmentID_W;
				}
			}

			public AggregateParameter SDepartmentName
		    {
				get
		        {
					if(_SDepartmentName_W == null)
	        	    {
						_SDepartmentName_W = TearOff.SDepartmentName;
					}
					return _SDepartmentName_W;
				}
			}

			public AggregateParameter SPhone
		    {
				get
		        {
					if(_SPhone_W == null)
	        	    {
						_SPhone_W = TearOff.SPhone;
					}
					return _SPhone_W;
				}
			}

			public AggregateParameter SAddress
		    {
				get
		        {
					if(_SAddress_W == null)
	        	    {
						_SAddress_W = TearOff.SAddress;
					}
					return _SAddress_W;
				}
			}

			public AggregateParameter FkManagerUserID
		    {
				get
		        {
					if(_FkManagerUserID_W == null)
	        	    {
						_FkManagerUserID_W = TearOff.FkManagerUserID;
					}
					return _FkManagerUserID_W;
				}
			}

			public AggregateParameter FkAccountManagerUserID
		    {
				get
		        {
					if(_FkAccountManagerUserID_W == null)
	        	    {
						_FkAccountManagerUserID_W = TearOff.FkAccountManagerUserID;
					}
					return _FkAccountManagerUserID_W;
				}
			}

			public AggregateParameter WeekStartTime
		    {
				get
		        {
					if(_WeekStartTime_W == null)
	        	    {
						_WeekStartTime_W = TearOff.WeekStartTime;
					}
					return _WeekStartTime_W;
				}
			}

			public AggregateParameter WeekEndTime
		    {
				get
		        {
					if(_WeekEndTime_W == null)
	        	    {
						_WeekEndTime_W = TearOff.WeekEndTime;
					}
					return _WeekEndTime_W;
				}
			}

			public AggregateParameter WeekendStartTime
		    {
				get
		        {
					if(_WeekendStartTime_W == null)
	        	    {
						_WeekendStartTime_W = TearOff.WeekendStartTime;
					}
					return _WeekendStartTime_W;
				}
			}

			public AggregateParameter WeekendEndTime
		    {
				get
		        {
					if(_WeekendEndTime_W == null)
	        	    {
						_WeekendEndTime_W = TearOff.WeekendEndTime;
					}
					return _WeekendEndTime_W;
				}
			}

			public AggregateParameter LowSeason1
		    {
				get
		        {
					if(_LowSeason1_W == null)
	        	    {
						_LowSeason1_W = TearOff.LowSeason1;
					}
					return _LowSeason1_W;
				}
			}

			public AggregateParameter LowSeason2
		    {
				get
		        {
					if(_LowSeason2_W == null)
	        	    {
						_LowSeason2_W = TearOff.LowSeason2;
					}
					return _LowSeason2_W;
				}
			}

			public AggregateParameter HighSeason
		    {
				get
		        {
					if(_HighSeason_W == null)
	        	    {
						_HighSeason_W = TearOff.HighSeason;
					}
					return _HighSeason_W;
				}
			}

			public AggregateParameter HighSeasonDef
		    {
				get
		        {
					if(_HighSeasonDef_W == null)
	        	    {
						_HighSeasonDef_W = TearOff.HighSeasonDef;
					}
					return _HighSeasonDef_W;
				}
			}

			public AggregateParameter LowSeasonDef
		    {
				get
		        {
					if(_LowSeasonDef_W == null)
	        	    {
						_LowSeasonDef_W = TearOff.LowSeasonDef;
					}
					return _LowSeasonDef_W;
				}
			}

			public AggregateParameter Contract
		    {
				get
		        {
					if(_Contract_W == null)
	        	    {
						_Contract_W = TearOff.Contract;
					}
					return _Contract_W;
				}
			}

			public AggregateParameter BIsActive
		    {
				get
		        {
					if(_BIsActive_W == null)
	        	    {
						_BIsActive_W = TearOff.BIsActive;
					}
					return _BIsActive_W;
				}
			}

			public AggregateParameter DCreateDate
		    {
				get
		        {
					if(_DCreateDate_W == null)
	        	    {
						_DCreateDate_W = TearOff.DCreateDate;
					}
					return _DCreateDate_W;
				}
			}

			public AggregateParameter DModifiedDate
		    {
				get
		        {
					if(_DModifiedDate_W == null)
	        	    {
						_DModifiedDate_W = TearOff.DModifiedDate;
					}
					return _DModifiedDate_W;
				}
			}

			private AggregateParameter _PkDepartmentID_W = null;
			private AggregateParameter _SDepartmentName_W = null;
			private AggregateParameter _SPhone_W = null;
			private AggregateParameter _SAddress_W = null;
			private AggregateParameter _FkManagerUserID_W = null;
			private AggregateParameter _FkAccountManagerUserID_W = null;
			private AggregateParameter _WeekStartTime_W = null;
			private AggregateParameter _WeekEndTime_W = null;
			private AggregateParameter _WeekendStartTime_W = null;
			private AggregateParameter _WeekendEndTime_W = null;
			private AggregateParameter _LowSeason1_W = null;
			private AggregateParameter _LowSeason2_W = null;
			private AggregateParameter _HighSeason_W = null;
			private AggregateParameter _HighSeasonDef_W = null;
			private AggregateParameter _LowSeasonDef_W = null;
			private AggregateParameter _Contract_W = null;
			private AggregateParameter _BIsActive_W = null;
			private AggregateParameter _DCreateDate_W = null;
			private AggregateParameter _DModifiedDate_W = null;

			public void AggregateClauseReset()
			{
				_PkDepartmentID_W = null;
				_SDepartmentName_W = null;
				_SPhone_W = null;
				_SAddress_W = null;
				_FkManagerUserID_W = null;
				_FkAccountManagerUserID_W = null;
				_WeekStartTime_W = null;
				_WeekEndTime_W = null;
				_WeekendStartTime_W = null;
				_WeekendEndTime_W = null;
				_LowSeason1_W = null;
				_LowSeason2_W = null;
				_HighSeason_W = null;
				_HighSeasonDef_W = null;
				_LowSeasonDef_W = null;
				_Contract_W = null;
				_BIsActive_W = null;
				_DCreateDate_W = null;
				_DModifiedDate_W = null;

				this._entity.Query.FlushAggregateParameters();

			}
	
			private BusinessEntity _entity;
			private TearOffAggregateParameter _tearOff;
			
		}
	
		public AggregateClause Aggregate
		{
			get
			{
				if(_aggregateClause == null)
				{
					_aggregateClause = new AggregateClause(this);
				}
		
				return _aggregateClause;
			}
		}
		
		private AggregateClause _aggregateClause = null;	
		#endregion
	
		protected override IDbCommand GetInsertCommand() 
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblDepartmentsInsert]";
	
			CreateParameters(cmd);
			
			SqlParameter p;
			p = cmd.Parameters[Parameters.PkDepartmentID.ParameterName];
			p.Direction = ParameterDirection.Output;
    
			return cmd;
		}
	
		protected override IDbCommand GetUpdateCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblDepartmentsUpdate]";
	
			CreateParameters(cmd);
			      
			return cmd;
		}
	
		protected override IDbCommand GetDeleteCommand()
		{
		
			SqlCommand cmd = new SqlCommand();
			cmd.CommandType = CommandType.StoredProcedure;
			cmd.CommandText = "[" + this.SchemaStoredProcedure + "proc_tblDepartmentsDelete]";
	
			SqlParameter p;
			p = cmd.Parameters.Add(Parameters.PkDepartmentID);
			p.SourceColumn = ColumnNames.PkDepartmentID;
			p.SourceVersion = DataRowVersion.Current;

  
			return cmd;
		}
		
		private IDbCommand CreateParameters(SqlCommand cmd)
		{
			SqlParameter p;
		
			p = cmd.Parameters.Add(Parameters.PkDepartmentID);
			p.SourceColumn = ColumnNames.PkDepartmentID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.SDepartmentName);
			p.SourceColumn = ColumnNames.SDepartmentName;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.SPhone);
			p.SourceColumn = ColumnNames.SPhone;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.SAddress);
			p.SourceColumn = ColumnNames.SAddress;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.FkManagerUserID);
			p.SourceColumn = ColumnNames.FkManagerUserID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.FkAccountManagerUserID);
			p.SourceColumn = ColumnNames.FkAccountManagerUserID;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.WeekStartTime);
			p.SourceColumn = ColumnNames.WeekStartTime;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.WeekEndTime);
			p.SourceColumn = ColumnNames.WeekEndTime;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.WeekendStartTime);
			p.SourceColumn = ColumnNames.WeekendStartTime;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.WeekendEndTime);
			p.SourceColumn = ColumnNames.WeekendEndTime;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.LowSeason1);
			p.SourceColumn = ColumnNames.LowSeason1;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.LowSeason2);
			p.SourceColumn = ColumnNames.LowSeason2;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.HighSeason);
			p.SourceColumn = ColumnNames.HighSeason;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.HighSeasonDef);
			p.SourceColumn = ColumnNames.HighSeasonDef;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.LowSeasonDef);
			p.SourceColumn = ColumnNames.LowSeasonDef;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.Contract);
			p.SourceColumn = ColumnNames.Contract;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.BIsActive);
			p.SourceColumn = ColumnNames.BIsActive;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DCreateDate);
			p.SourceColumn = ColumnNames.DCreateDate;
			p.SourceVersion = DataRowVersion.Current;

			p = cmd.Parameters.Add(Parameters.DModifiedDate);
			p.SourceColumn = ColumnNames.DModifiedDate;
			p.SourceVersion = DataRowVersion.Current;


			return cmd;
		}
	}
}
